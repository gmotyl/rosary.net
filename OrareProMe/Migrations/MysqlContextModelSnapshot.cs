// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrareProMe.Infrastructure.Database;

namespace OrareProMe.Migrations
{
    [DbContext(typeof(MysqlContext))]
    partial class MysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("OrareProMe.Domain.Intention", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("OwnerId")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Intentions");
                });

            modelBuilder.Entity("OrareProMe.Domain.Prayer", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("RosaryId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("RosaryId");

                    b.ToTable("Prayers");
                });

            modelBuilder.Entity("OrareProMe.Domain.Rosary", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("IntentionId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("Id");

                    b.HasIndex("IntentionId");

                    b.ToTable("Rosaries");
                });

            modelBuilder.Entity("OrareProMe.Domain.User", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrareProMe.Domain.Intention", b =>
                {
                    b.HasOne("OrareProMe.Domain.User", "Owner")
                        .WithMany("Intentions")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("OrareProMe.Domain.Prayer", b =>
                {
                    b.HasOne("OrareProMe.Domain.Rosary", "Rosary")
                        .WithMany()
                        .HasForeignKey("RosaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rosary");
                });

            modelBuilder.Entity("OrareProMe.Domain.Rosary", b =>
                {
                    b.HasOne("OrareProMe.Domain.Intention", "Intention")
                        .WithMany()
                        .HasForeignKey("IntentionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intention");
                });

            modelBuilder.Entity("OrareProMe.Domain.User", b =>
                {
                    b.Navigation("Intentions");
                });
#pragma warning restore 612, 618
        }
    }
}
